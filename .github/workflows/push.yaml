name: Push

on:
  push:
    branches: 
      - main

env:
  NODE_VERSION: 12.x
  DOCKER_FILE_PATH: Dockerfile.dev

jobs:

  build:

    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ${{github.event.pull_request.head.sha}}

    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependencies
      run: npm install

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Generate Tag
      id: generate_tag
      uses: anothrNick/github-tag-action@1.26.0
      env:
        GITHUB_TOKEN: ${{ secrets.STAKATER_GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch
        DRY_RUN: true

    - name: Login to Registry
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Generate image repository path
      run: |
        echo IMAGE_REPOSITORY=$(echo imrehan/reactcompleteguide | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
        echo $IMAGE_REPOSITORY


    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ${{ env.DOCKER_FILE_PATH  }}
        pull: true
        push: true
        build-args: BUILD_PARAMETERS=${{ env.BUILD_PARAMETERS }}
        cache-to: type=inline
        tags: |
          ${{ env.IMAGE_REPOSITORY }}:${{ steps.generate_tag.outputs.new_tag }}
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}

    # Share artifact inside workflow
    - name: Share artifact inside workflow
      uses: actions/upload-artifact@v1
      with:
        name: react-github-actions-build
        path: build

    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      if: always() # Pick up events even if the job fails or is canceled.
      with:
        status: ${{ job.status }}
        fields: repo,action,eventName,ref,workflow
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
    
  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Get artifact
        uses: actions/download-artifact@v1
        with:
          name: react-github-actions-build
      
      - name: Zip build
        uses: thedoctor0/zip-release@master
        with:
          filename: react-github-actions-release-build.zip
          path: react-github-actions-build
      
      - name: Upload build zip artifact
        uses: actions/upload-artifact@v1
        with:
          name: react-github-actions-release-build.zip
          path: react-github-actions-release-build.zip
      
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: react-github-actions-release-build.zip
          body: https://react-github-actions.s3.amazonaws.com/index.html
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        if: always() # Pick up events even if the job fails or is canceled.
        with:
          status: ${{ job.status }}
          fields: repo,action,eventName,ref,workflow
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

